
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ICT2WebService", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ICT2WebService {


    /**
     * 
     * @param s1
     * @param s2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "longestString", targetNamespace = "http://server/", className = "server.LongestString")
    @ResponseWrapper(localName = "longestStringResponse", targetNamespace = "http://server/", className = "server.LongestStringResponse")
    @Action(input = "http://server/ICT2WebService/longestStringRequest", output = "http://server/ICT2WebService/longestStringResponse")
    public String longestString(
        @WebParam(name = "s1", targetNamespace = "")
        String s1,
        @WebParam(name = "s2", targetNamespace = "")
        String s2);

    /**
     * 
     * @return
     *     returns java.lang.Double
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLargestDouble", targetNamespace = "http://server/", className = "server.GetLargestDouble")
    @ResponseWrapper(localName = "getLargestDoubleResponse", targetNamespace = "http://server/", className = "server.GetLargestDoubleResponse")
    @Action(input = "http://server/ICT2WebService/getLargestDoubleRequest", output = "http://server/ICT2WebService/getLargestDoubleResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://server/ICT2WebService/getLargestDouble/Fault/Exception")
    })
    public Double getLargestDouble()
        throws Exception_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://server/", className = "server.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://server/", className = "server.HelloResponse")
    @Action(input = "http://server/ICT2WebService/helloRequest", output = "http://server/ICT2WebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Double>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDoubleSamplesAbove", targetNamespace = "http://server/", className = "server.GetAllDoubleSamplesAbove")
    @ResponseWrapper(localName = "getAllDoubleSamplesAboveResponse", targetNamespace = "http://server/", className = "server.GetAllDoubleSamplesAboveResponse")
    @Action(input = "http://server/ICT2WebService/getAllDoubleSamplesAboveRequest", output = "http://server/ICT2WebService/getAllDoubleSamplesAboveResponse")
    public List<Double> getAllDoubleSamplesAbove();

    /**
     * 
     * @param s1
     * @param s2
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "safeLongestString", targetNamespace = "http://server/", className = "server.SafeLongestString")
    @ResponseWrapper(localName = "safeLongestStringResponse", targetNamespace = "http://server/", className = "server.SafeLongestStringResponse")
    @Action(input = "http://server/ICT2WebService/safeLongestStringRequest", output = "http://server/ICT2WebService/safeLongestStringResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://server/ICT2WebService/safeLongestString/Fault/Exception")
    })
    public String safeLongestString(
        @WebParam(name = "s1", targetNamespace = "")
        String s1,
        @WebParam(name = "s2", targetNamespace = "")
        String s2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param d
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addDoubleOnServer", targetNamespace = "http://server/", className = "server.AddDoubleOnServer")
    @ResponseWrapper(localName = "addDoubleOnServerResponse", targetNamespace = "http://server/", className = "server.AddDoubleOnServerResponse")
    @Action(input = "http://server/ICT2WebService/addDoubleOnServerRequest", output = "http://server/ICT2WebService/addDoubleOnServerResponse")
    public Double addDoubleOnServer(
        @WebParam(name = "d", targetNamespace = "")
        Double d);

    /**
     * 
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testConnection", targetNamespace = "http://server/", className = "server.TestConnection")
    @ResponseWrapper(localName = "testConnectionResponse", targetNamespace = "http://server/", className = "server.TestConnectionResponse")
    @Action(input = "http://server/ICT2WebService/testConnectionRequest", output = "http://server/ICT2WebService/testConnectionResponse")
    public Double testConnection();

}
